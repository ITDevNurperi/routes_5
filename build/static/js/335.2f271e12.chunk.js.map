{"version":3,"file":"static/js/335.2f271e12.chunk.js","mappings":"uKACA,EAAuB,mB,SCKvB,EAJa,SAACA,GACZ,OAAOC,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAAaC,SAAEJ,EAAMI,UAC9C,E,SCHA,EAAuB,wBAAvB,EAA8F,2BAA9F,EAAmI,2B,SCyDnI,EAnDkB,SAACJ,GACjB,IAAMK,GAAiBC,EAAAA,EAAAA,UACjBC,GAAeD,EAAAA,EAAAA,UACrBE,GAAoCC,EAAAA,EAAAA,WAAS,GAAMC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA5CI,EAAUF,EAAA,GAAEG,EAAaH,EAAA,GAuBhC,OACEI,EAAAA,EAAAA,MAACC,EAAAA,SAAQ,CAAAX,SAAA,EACPH,EAAAA,EAAAA,KAACe,EAAAA,OAAM,CAACC,KAAML,EAAYM,QAAS,SAACC,GAAQ,MAAK,cAAc,KAC/DlB,EAAAA,EAAAA,KAACmB,EAAI,CAAAhB,UACHU,EAAAA,EAAAA,MAAA,QAAMZ,UAAWC,EAAckB,SAvBrC,SAA2BC,GACzBA,EAAMC,iBAEN,IAAMC,EAAgBnB,EAAeoB,QAAQC,MACvCC,EAAcpB,EAAakB,QAAQC,MAIzC1B,EAAM4B,WAAW,CAAEC,OAAQL,EAAeM,KAAMH,GAClD,EAckEI,QAZvC,WACzBlB,GAAc,EAChB,EAU8FT,SAAA,CACrFJ,EAAMgC,YAAa/B,EAAAA,EAAAA,KAAA,OAAAG,UAAKH,EAAAA,EAAAA,KAACgC,EAAAA,EAAc,OACxCnB,EAAAA,EAAAA,MAAA,OAAKZ,UAAWC,EAAgBC,SAAA,EAC9BH,EAAAA,EAAAA,KAAA,SAAOiC,QAAQ,SAAQ9B,SAAC,YACxBH,EAAAA,EAAAA,KAAA,SAAOkC,KAAK,OAAOC,GAAG,SAASC,IAAKhC,QAEtCS,EAAAA,EAAAA,MAAA,OAAKZ,UAAWC,EAAgBC,SAAA,EAC9BH,EAAAA,EAAAA,KAAA,SAAOiC,QAAQ,OAAM9B,SAAC,UACtBH,EAAAA,EAAAA,KAAA,YAAUmC,GAAG,OAAOE,KAAK,IAAID,IAAK9B,QAEpCN,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAAgBC,UAC9BH,EAAAA,EAAAA,KAAA,UAAQC,UAAU,MAAMqC,QAnBP,WACzB1B,GAAc,EAChB,EAiB8DT,SAAC,uBAQjE,E,kBC1BA,EAxBiB,WACf,IAAMoC,GAAUC,EAAAA,EAAAA,cAChBC,QAAQC,IAAIH,GAEZ,IAAAI,GAAgCC,EAAAA,EAAAA,GAAQC,EAAAA,IAAhCC,EAAWH,EAAXG,YAAaC,EAAMJ,EAANI,QAErBC,EAAAA,EAAAA,YAAU,WACO,cAAXD,GACFR,EAAQU,KAAK,UAEjB,GAAG,CAACF,EAAQR,IASZ,OACEvC,EAAAA,EAAAA,KAACkD,EAAS,CAACnB,UAAsB,YAAXgB,EAAsBpB,WARtB,SAACwB,GACvBV,QAAQC,IAAIS,GACZL,EAAYK,EAEd,GAMF,C","sources":["webpack://router/./src/components/UI/Card.module.css?26d0","components/UI/Card.js","webpack://router/./src/components/quotes/QuoteForm.module.css?b10c","components/quotes/QuoteForm.js","pages/NewQuote.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"card\":\"Card_card__K9tlZ\"};","import classes from './Card.module.css';\n\nconst Card = (props) => {\n  return <div className={classes.card}>{props.children}</div>;\n};\n\nexport default Card;\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"QuoteForm_form__I5PRJ\",\"loading\":\"QuoteForm_loading__I-riH\",\"control\":\"QuoteForm_control__HUI27\",\"actions\":\"QuoteForm_actions__cR7Mj\"};","import { useRef, Fragment, useState} from 'react';\nimport Card from '../UI/Card';\nimport { Prompt } from 'react-router-dom';\nimport classes from './QuoteForm.module.css';\nimport LoadingSpinner from '../UI/LoadingSpinner'\n\n\nconst QuoteForm = (props) => {\n  const authorInputRef = useRef();\n  const textInputRef = useRef();\n  const [isEntering, setIsEntering] = useState(false)\n \n\n\n  function submitFormHandler(event) {\n    event.preventDefault();\n\n    const enteredAuthor = authorInputRef.current.value;\n    const enteredText = textInputRef.current.value;\n\n    // optional: Could validate here\n\n    props.onAddQuote({ author: enteredAuthor, text: enteredText });\n  }\n\n  const formFocucedHandler = () => {\n    setIsEntering(true)\n  }\n\n  const finishEnteringData = () => {\n    setIsEntering(false)\n  }\n\n  return (\n    <Fragment>\n      <Prompt when={isEntering} message={(location) => 'Are you sure'}/>\n      <Card>\n        <form className={classes.form} onSubmit={submitFormHandler} onFocus={formFocucedHandler}>\n          {props.isLoading && <div><LoadingSpinner/></div>}\n          <div className={classes.control}>\n            <label htmlFor=\"author\">Author</label>\n            <input type=\"text\" id=\"author\" ref={authorInputRef} />\n          </div>\n          <div className={classes.control}>\n            <label htmlFor=\"text\">Text</label>\n            <textarea id=\"text\" rows=\"5\" ref={textInputRef}></textarea>\n          </div>\n          <div className={classes.actions}>\n            <button className=\"btn\" onClick={finishEnteringData}>\n              Add Quote\n            </button>\n          </div>\n        </form>\n      </Card>\n    </Fragment>\n  );\n};\n\nexport default QuoteForm;\n","import React, { useEffect } from 'react'\r\nimport QuoteForm from '../components/quotes/QuoteForm'\r\nimport { useHistory } from 'react-router-dom'\r\nimport useHttp from '../hooks/use-http'\r\nimport { addQuote } from '../lib/api'\r\n\r\nconst NewQuote = () => {\r\n  const history = useHistory()\r\n  console.log(history);\r\n\r\n  const { sendRequest, status } = useHttp(addQuote)\r\n\r\n  useEffect(() => {\r\n    if (status === 'completed') {\r\n      history.push('/quotes')\r\n    }\r\n  }, [status, history])\r\n\r\n  const addQuoteHandler = (quote) => {\r\n    console.log(quote);\r\n    sendRequest(quote)\r\n    // history.push('/quotes')\r\n  }\r\n\r\n\r\n  return (\r\n    <QuoteForm isLoading={status === 'pending'} onAddQuote={addQuoteHandler} />\r\n  )\r\n}\r\n\r\nexport default NewQuote"],"names":["props","_jsx","className","classes","children","authorInputRef","useRef","textInputRef","_useState","useState","_useState2","_slicedToArray","isEntering","setIsEntering","_jsxs","Fragment","Prompt","when","message","location","Card","onSubmit","event","preventDefault","enteredAuthor","current","value","enteredText","onAddQuote","author","text","onFocus","isLoading","LoadingSpinner","htmlFor","type","id","ref","rows","onClick","history","useHistory","console","log","_useHttp","useHttp","addQuote","sendRequest","status","useEffect","push","QuoteForm","quote"],"sourceRoot":""}