{"version":3,"file":"static/js/117.67870087.chunk.js","mappings":"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","sources":["webpack://router/./src/components/quotes/HighlightedQuote.module.css?c98c","components/quotes/HighlightedQuote.js","webpack://router/./src/components/comments/Comments.module.css?d88e","webpack://router/./src/components/comments/NewCommentForm.module.css?81c1","components/comments/NewCommentForm.js","webpack://router/./src/components/comments/CommentItem.module.css?204f","components/comments/CommentItem.js","webpack://router/./src/components/comments/CommentsList.module.css?06d6","components/comments/CommentsList.js","components/comments/Comments.js","pages/QuoteDetail.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"quote\":\"HighlightedQuote_quote__A75t1\"};","import classes from './HighlightedQuote.module.css';\n\nconst HighlightedQuote = (props) => {\n  return (\n    <figure className={classes.quote}>\n      <p>{props.text}</p>\n      <figcaption>{props.author}</figcaption>\n    </figure>\n  );\n};\n\nexport default HighlightedQuote;\n","// extracted by mini-css-extract-plugin\nexport default {\"comments\":\"Comments_comments__DcKza\"};","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"NewCommentForm_form__B620v\",\"loading\":\"NewCommentForm_loading__FN0n7\",\"control\":\"NewCommentForm_control__0vSsx\",\"actions\":\"NewCommentForm_actions__-MlgQ\"};","import { useEffect, useRef } from \"react\";\nimport classes from \"./NewCommentForm.module.css\";\nimport useHttp from \"../../hooks/use-http\";\nimport { addComment } from \"../../lib/api\";\nimport LoadingSpinner from \"../UI/LoadingSpinner\";\n\nconst NewCommentForm = (props) => {\n\n  const { sendRequest, status, error, data: loadedComment } = useHttp(addComment)\n  const commentTextRef = useRef();\n  const { onAddedComment } = props;\n\n  useEffect(() => {\n    if (status === 'completed' && !error) {\n      onAddedComment()\n    }\n  }, [status, error, onAddedComment])\n\n  const submitFormHandler = (event) => {\n    event.preventDefault();\n    const enteredText = commentTextRef.current.value;\n    // optional: Could validate here\n\n    // send comment to server\n    sendRequest({\n      commentData: { text: enteredText },\n      quotedId: props.quotedId\n    })\n    \n  };\n\n  return (\n    <form className={classes.form} onSubmit={submitFormHandler}>\n      {status === 'pending' && <LoadingSpinner />}\n      <div className={classes.control} onSubmit={submitFormHandler}>\n        <label htmlFor=\"comment\">Your Comment</label>\n        <textarea id=\"comment\" rows=\"5\" ref={commentTextRef}></textarea>\n      </div>\n      <div className={classes.actions}>\n        <button className=\"btn\">Add Comment</button>\n      </div>\n    </form>\n  );\n};\n\nexport default NewCommentForm;\n","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"CommentItem_item__J1TAI\"};","import classes from './CommentItem.module.css';\n\nconst CommentItem = (props) => {\n  return (\n    <li className={classes.item}>\n      <p>{props.text}</p>\n    </li>\n  );\n};\n\nexport default CommentItem;\n","// extracted by mini-css-extract-plugin\nexport default {\"comments\":\"CommentsList_comments__TdU2l\"};","import CommentItem from './CommentItem';\nimport classes from './CommentsList.module.css';\n\nconst CommentsList = (props) => {\n  return (\n    <ul className={classes.comments}>\n      {props.comment.map((comments) => (\n        <CommentItem key={comments.id} text={comments.text} />\n      ))}\n    </ul>\n  );\n};\n\nexport default CommentsList;\n","import { useCallback, useEffect, useState } from \"react\";\nimport classes from \"./Comments.module.css\";\nimport NewCommentForm from \"./NewCommentForm\";\nimport useHttp from \"../../hooks/use-http\";\nimport { useParams } from \"react-router-dom\";\nimport { getAllComments } from \"../../lib/api\";\nimport LoadingSpinner from \"../UI/LoadingSpinner\";\nimport CommentsList from \"./CommentsList\";\n\nconst Comments = () => {\n  const [isAddingComment, setIsAddingComment] = useState(false);\n  const { sendRequest, status, error, data: loadedComment } = useHttp(getAllComments)\n  const params = useParams()\n  const { quoteId } = params\n\n  useEffect(() => {\n    sendRequest(quoteId)\n  }, [quoteId, sendRequest])\n\n  const startAddCommentHandler = () => {\n    setIsAddingComment(true);\n  };\n\n  const addedCommentHandler = useCallback(() => {\n    sendRequest(quoteId)\n  }, [sendRequest, quoteId])\n\n  let comment;\n  if (status === 'pending') {\n    comment = <div className=\"centered\"><LoadingSpinner /></div>\n  }\n  if (error) {\n    comment = <p className=\"centered focused\">{error}</p>\n  }\n  if (status === 'completed' && loadedComment && loadedComment.length > 0) {\n    comment = <CommentsList comment={loadedComment} />\n  }\n  if (status === 'completed' && (!loadedComment && loadedComment.length === 0)) {\n    comment = <p>Comment not found maybe add one?</p>\n  }\n\n  return (\n    <section className={classes.comments}>\n      <h2>User Comments</h2>\n      {!isAddingComment && (\n        <button className=\"btn\" onClick={startAddCommentHandler}>\n          Add a Comment\n        </button>\n      )}\n      {isAddingComment &&\n        <NewCommentForm\n          quotedId={quoteId}\n          onAddedComment={addedCommentHandler} />}\n      {comment}\n    </section>\n  );\n};\n\nexport default Comments;\n","import React, { useEffect } from 'react'\r\nimport { useParams, Route, Link } from 'react-router-dom'\r\nimport HighlightedQuote from '../components/quotes/HighlightedQuote'\r\nimport Comments from '../components/comments/Comments'\r\nimport { useRouteMatch } from 'react-router'\r\nimport useHttp from '../hooks/use-http'\r\nimport { getSingleQuote } from '../lib/api'\r\nimport LoadingSpinner from '../components/UI/LoadingSpinner'\r\n\r\nconst QuoteDetail = () => {\r\n    const match = useRouteMatch()\r\n    const params = useParams()\r\n    const { quoteId } = params\r\n    const { sendRequest, status, error, data: loaddedQuote } = useHttp(getSingleQuote, true)\r\n\r\n    useEffect(() => {\r\n        sendRequest(quoteId)\r\n    }, [sendRequest, quoteId])\r\n    console.log(quoteId);\r\n\r\n    if (status === 'pending') {\r\n        return <div className='centered'>\r\n            <LoadingSpinner />\r\n        </div>\r\n    }\r\n    if (error) {\r\n        return <p className='centered focused'>{error}</p>\r\n    }\r\n    if (!loaddedQuote.text) {\r\n        return <p>No quote found</p>\r\n    }\r\n    // const quote = loadedQuotes.find(quote => quote.id === params.quoteId)\r\n\r\n\r\n    console.log(params);\r\n    return (\r\n        <div>\r\n            <HighlightedQuote text={loaddedQuote.text} author={loaddedQuote.author} />\r\n            <Route path={`${match.path}`} exact>\r\n                <div className=\"centered\">\r\n                    <Link className='btn--flat' to={`/quotes/${params.quoteId}/comments`}>Load comments</Link>\r\n                </div>\r\n            </Route>\r\n            <Route path={`/quotes/${params.quoteId}/comments`}>\r\n                <Comments/> \r\n            </Route>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default QuoteDetail"],"names":["props","_jsxs","className","classes","children","_jsx","text","author","_useHttp","useHttp","addComment","sendRequest","status","error","commentTextRef","data","useRef","onAddedComment","useEffect","submitFormHandler","event","preventDefault","enteredText","current","value","commentData","quotedId","onSubmit","LoadingSpinner","htmlFor","id","rows","ref","comment","map","comments","CommentItem","_useState","useState","_useState2","_slicedToArray","isAddingComment","setIsAddingComment","getAllComments","loadedComment","quoteId","useParams","addedCommentHandler","useCallback","length","CommentsList","onClick","NewCommentForm","match","useRouteMatch","params","getSingleQuote","loaddedQuote","console","log","HighlightedQuote","Route","path","concat","exact","Link","to","Comments"],"sourceRoot":""}